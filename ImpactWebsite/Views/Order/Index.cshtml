@model IEnumerable<ImpactWebsite.Models.OrderModels.OrderList>

@using Microsoft.AspNetCore.Identity
@using ImpactWebsite.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    @{
        ViewData["Title"] = "Index";
    }

    <h2>Select Modules</h2>

<form action="/Order/NewOrder" method="post">
    <label style="color: brown;">*Email Address: </label>
    @if (SignInManager.IsSignedIn(User))
    {
        <input type="email" required="required" name="email" value="@ViewData["email"]" />
    }
    else
    {
        <input type="email" required="required" name="email" value="" />
    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    Select
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Modules.ModuleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Modules.DeliveryDays)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Modules.UnitPrice)
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @if (@i == 0)
                        {
                            <input type="checkbox" checked="checked" disabled="disabled" name="modules" value='@Html.Raw(Json.Serialize(Model.ElementAt(@i)))' />
                        } else { 
                            <input type="checkbox" name="modules" class="chkBox" value='@Html.Raw(Json.Serialize(Model.ElementAt(@i)))' />
                        }
                    </td>
                    <td> 
                        <label asp-for="@Model.ElementAt(@i).IsChecked" >
                            @Model.ElementAt(@i).Modules.ModuleName
                        </label>
                    </td>
                    <td>
                        <label asp-for="@Model.ElementAt(@i).IsChecked">
                            @Model.ElementAt(@i).Modules.DeliveryDays
                        </label>
                    </td>
                    <td>
                        <label asp-for="@Model.ElementAt(@i).IsChecked">
                            @Model.ElementAt(@i).Modules.UnitPrice.Price
                        </label>
                    </td>
                </tr>
            }
            <tr>
                <td></td>
                <td>Total: </td>
                <td><input type="text" name="totalDay" value="3" readonly="readonly" /></td>
                <td><input type="text" name="totalPrice" value="0" readonly="readonly"  /></td>
                @*<td><input type="text" name="totalPrice" value="0" /></td>*@
            </tr>
        </tbody>
    </table>
    <div class="form-group">
        <div>
            <input type="submit" class="btn btn-primary" value="Next >>"  />
        </div>
    </div>
</form>
 
@section scripts
{
        <script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {
                $("input[type='checkbox']").click(function () {
                    calculateTotal();
                });
            });
            function calculateTotal() {
                totalPrice = 0.0;
                totalDays = 3;
                $(':checkbox:checked.chkBox').each(function () {

                    var jsonObj = JSON.parse($(this).val());
                    console.log($(this).val());
                    totalPrice += +jsonObj.modules.unitPrice.price;
                    totalDays += +jsonObj.modules.deliveryDays;
                });
                $('input[name=totalDay]').val(totalDays);
                $('input[name=totalPrice]').val(totalPrice.toFixed(2));
            }
        </script>
    }
